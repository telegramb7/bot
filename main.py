import os
from dotenv import load_dotenv
import requests
import telebot
import functions
from telebot import types
from flask import Flask, request, jsonify

load_dotenv()

# initialization bot
web_hook = os.getenv('WEB_HOOK')
token = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(token)

server = Flask(__name__)

ANKET_DICT = {}
PK_PARTNER={}

class Anket:
    def __init__(self, name):
        self.name = name
        self.age = None
        self.description =None
        self.file_unique_id = None
        self.sex = None

@bot.message_handler(content_types=['text', 'photo'])
def start_message(message):
    if message.text == '/start':
        id_chat = message.chat.id
        check = functions.check_user_in_db(id_chat)
        if check == False:
        #create new user
            functions.create_new_user(id_chat, message.chat.username)
            bot.send_message(message.from_user.id, text='–†–∞–¥ –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤–ø–µ—Ä–≤—ã–µ. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å username. –ï—Å–ª–∏ —É –≤–∞—Å –µ–≥–æ –Ω–µ—Ç, —É—Å—Ç–∞–≤–Ω–æ–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–π–æ–∫–∞—Ö —Ç–µ–ª–µ–≥—Ä–∞–º. –î–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –∞–Ω–∫–µ—Ç—É. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?', reply_markup=types.ReplyKeyboardRemove())
            bot.register_next_step_handler(message, get_name)
        if check == True:
            username = message.chat.username
            if username == None:
                username = ""
            functions.put_user(message.chat.id, username)
            check_anket = functions.check_anket_in_db(message.chat.id)
            if check_anket == False:
                bot.send_message(message.from_user.id, text= '–ü—Ä–∏–≤–µ—Ç —É —Ç–µ–±—è –Ω–µ—Ç –ê–Ω–∫–µ—Ç—ã, –¥–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?', reply_markup=types.ReplyKeyboardRemove())
                bot.register_next_step_handler(message, get_name)
            elif check_anket == True:
                bot.send_message(message.chat.id, text='–î–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏.')
                search(message)
    elif message.text == '/menu':
        username = message.chat.username
        if username == None:
            username = ""
        functions.put_user(message.chat.id, username)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        user_anket = types.KeyboardButton('–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞üìÉ',)
        find = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –∞–Ω–∫–µ—Ç—ãüëÄ',)
        pull_anket = types.KeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æüìù',)
        bye = types.KeyboardButton('–î–æ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏üëã')
        markup.row(user_anket, find, pull_anket, bye)
        bot.send_message(message.chat.id, text="–ú–µ–Ω—é: ", reply_markup=markup)
        bot.register_next_step_handler(message, main_menu)

    
def get_name(message):
    if message.text != None:

        id_chat = message.chat.id
        name = message.text
        anket = Anket(name)
        ANKET_DICT[id_chat] = anket

        bot.send_message(message.chat.id, text = '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç: ', reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, get_age)
    else:
        bot.send_message(message.chat.id, text = '–ò–º—è —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–∞–≤. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: ', reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, get_name)
    

def get_age(message):
    try:
        id_chat = message.chat.id
        age = message.text
        if not age.isdigit():
            bot.send_message(message.chat.id, text = '–í–æ–∑—Ä–∞—Å—Ç –º–æ–∂–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥: ')
            bot.register_next_step_handler(message, get_age)
        anket = ANKET_DICT[id_chat]
        anket.age = int(age)
        bot.send_message(message.chat.id, text = '–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ —Å–µ–±—è –∏ —Å–≤–æ–∏ —É–≤–ª–µ—á–µ–Ω–∏—è: ', reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, get_description)
    except Exception:
        pass
    
def get_description(message):
    id_chat = message.chat.id
    description = message.text
    if message.text != None:
        anket = ANKET_DICT[id_chat]
        anket.description = str(description)
        bot.send_message(message.chat.id, text = '–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–≤–æ–µ —Ñ–æ—Ç–æ: ', reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, get_file)
    else:
        bot.send_message(message.chat.id, text = '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–∞–≤ –∏ —Ü–∏—Ñ—Ä. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: ', reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, get_description)

def get_file(message):
    id_chat = message.chat.id
    if message.photo != None:
        file_unique_id = message.photo[-1].file_id
        anket = ANKET_DICT[id_chat]
        anket.file_unique_id = str(file_unique_id)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        male = types.KeyboardButton('male')
        female = types.KeyboardButton('femail')
        markup.row(male, female)
        bot.send_message(message.chat.id, text = '–ö–∞–∫–æ–≥–æ –≤—ã –ø–æ–ª–∞: ', reply_markup=markup)
        bot.register_next_step_handler(message, get_sex)
    else:
        bot.send_message(message.chat.id, text = '–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ.', reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, get_file)

def get_sex(message):
    id_chat = message.chat.id
    sex = message.text
    check = functions.check_anket_in_db(id_chat)
    if check == False:
        if message.text == 'male':
            anket = ANKET_DICT[id_chat]
            anket.sex = True
            sex = "–ú—É–∂—Å–∫–æ–π"
            bot.send_message(message.chat.id, text = '–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:')
            bot.send_photo(message.chat.id, anket.file_unique_id, caption=f'{anket.name}, {sex}\n–ú–Ω–µ: {anket.age}\n{anket.description}')
            functions.create_new_anket(id_chat, ANKET_DICT[id_chat])
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            user_anket = types.KeyboardButton('–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞üìÉ',)
            find = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –∞–Ω–∫–µ—Ç—ãüëÄ',)
            pull_anket = types.KeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æüìù',)
            bye = types.KeyboardButton('–î–æ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏üëã')
            markup.row(user_anket, find, pull_anket, bye)
            bot.send_message(message.chat.id, text="–ú–µ–Ω—é: ", reply_markup=markup)
            bot.register_next_step_handler(message, main_menu)
        elif message.text == 'femail':
            anket = ANKET_DICT[id_chat]
            anket.sex = False
            sex = "–ñ–µ–Ω—Å–∫–∏–π"
            bot.send_message(message.chat.id, text = '–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:')
            bot.send_photo(message.chat.id, anket.file_unique_id, caption=f'{anket.name}, {sex}\n–ú–Ω–µ: {anket.age}\n{anket.description}', reply_markup=types.ReplyKeyboardRemove())
            functions.create_new_anket(id_chat, ANKET_DICT[id_chat])
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            user_anket = types.KeyboardButton('–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞üìÉ',)
            find = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –∞–Ω–∫–µ—Ç—ãüëÄ',)
            pull_anket = types.KeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æüìù',)
            bye = types.KeyboardButton('–î–æ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏üëã')
            markup.row(user_anket, find, pull_anket, bye)
            bot.send_message(message.chat.id, text="–ú–µ–Ω—é: ", reply_markup=markup)
            bot.register_next_step_handler(message, main_menu)
    elif check == True:
        if message.text == 'male':
            anket = ANKET_DICT[id_chat]
            anket.sex = True
            sex = "–ú—É–∂—Å–∫–æ–π"
            bot.send_message(message.chat.id, text = '–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:')
            bot.send_photo(message.chat.id, anket.file_unique_id, caption=f'{anket.name}, {sex}\n–ú–Ω–µ: {anket.age}\n{anket.description}')
            functions.put_anket(message.chat.id, ANKET_DICT[id_chat])
        elif message.text == 'femail':
            anket = ANKET_DICT[id_chat]
            anket.sex = False
            sex = "–ñ–µ–Ω—Å–∫–∏–π"
            bot.send_message(message.chat.id, text = '–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:')
            bot.send_photo(message.chat.id, anket.file_unique_id, caption=f'{anket.name}, {sex}\n–ú–Ω–µ: {anket.age}\n{anket.description}', reply_markup=types.ReplyKeyboardRemove())
            functions.put_anket(message.chat.id, ANKET_DICT[id_chat])
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        user_anket = types.KeyboardButton('–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞üìÉ',)
        find = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –∞–Ω–∫–µ—Ç—ãüëÄ',)
        pull_anket = types.KeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æüìù',)
        bye = types.KeyboardButton('–î–æ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏üëã')
        markup.row(user_anket, find, pull_anket, bye)
        bot.send_message(message.chat.id, text="–ú–µ–Ω—é: ", reply_markup=markup)
        bot.register_next_step_handler(message, main_menu)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        male = types.KeyboardButton('male')
        female = types.KeyboardButton('femail')
        markup.row(male, female)
        bot.send_message(message.chat.id, text = '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä', reply_markup=markup)
        bot.register_next_step_handler(message, get_sex)

def search(message):
    search_data = functions.another_anket(message.chat.id)
    # anket = functions.next()
    if search_data == False:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        user_anket = types.KeyboardButton('–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞üìÉ',)
        find = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –∞–Ω–∫–µ—Ç—ãüëÄ',)
        pull_anket = types.KeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æüìù',)
        bye = types.KeyboardButton('–î–æ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏üëã')
        markup.row(user_anket, find, pull_anket, bye)
        bot.send_message(message.chat.id, text='–ù–∞ —Å–µ–≥–æ–¥–Ω—è –∞–Ω–∫–µ—Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!', reply_markup=markup)
        bot.register_next_step_handler(message, main_menu)
    elif search_data != False:
        if search_data['sex'] == True:
            sex = "–ú—É–∂—Å–∫–æ–π"
            bot.send_photo(message.chat.id, search_data['file_unique_id'], caption=f'{search_data["name"]}, {sex}\n–í–æ–∑—Ä–∞—Å—Ç: {search_data["age"]}\n{search_data["description"]}')
            PK_PARTNER[message.chat.id] = search_data['user']
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            like = types.KeyboardButton('üëç',)
            dislike = types.KeyboardButton('üëé',)
            sleep = types.KeyboardButton('üëã')
            markup.row(like, dislike, sleep)
            bot.send_message(message.chat.id, text='>', reply_markup=markup)
            bot.register_next_step_handler(message, check_answer)
        elif search_data['sex'] == False:
            sex = "–ñ–µ–Ω—Å–∫–∏–π"
            bot.send_photo(message.chat.id, search_data['file_unique_id'], caption=f'{search_data["name"]}, {sex}\n–í–æ–∑—Ä–∞—Å—Ç: {search_data["age"]}\n{search_data["description"]}')
            PK_PARTNER[message.chat.id] = search_data['user']
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            like = types.KeyboardButton('üëç',)
            dislike = types.KeyboardButton('üëé',)
            sleep = types.KeyboardButton('üëã')
            markup.row(like, dislike, sleep)
            bot.send_message(message.chat.id, text='>', reply_markup=markup)
            bot.register_next_step_handler(message, check_answer)


def check_answer(message):
    if message.text == 'üëã':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        user_anket = types.KeyboardButton('–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞üìÉ',)
        find = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –∞–Ω–∫–µ—Ç—ãüëÄ',)
        pull_anket = types.KeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æüìù',)
        bye = types.KeyboardButton('–î–æ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏üëã')
        markup.row(user_anket, find, pull_anket, bye)
        bot.send_message(message.chat.id, text = '–î–æ –≤—Å—Ç—Ä–µ—á–∏!', reply_markup=markup)
        bot.register_next_step_handler(message, main_menu)
    elif message.text == 'üëé':
        id_chat = message.chat.id
        id_partner = PK_PARTNER[message.chat.id]
        functions.post_dislike(id_chat, id_partner)
        search(message)
    elif message.text == 'üëç':
        id_chat = message.chat.id
        id_partner = PK_PARTNER[message.chat.id]
        functions.post_like(id_chat, id_partner)
        match_date = functions.check_match(id_chat, id_partner)
        if match_date == False:
            search(message)
        elif match_date != False:
            if match_date['partner_username'] != "" and match_date["username"] != "":
                bot.send_photo(message.chat.id, match_date['partner_photo'], caption = f'–£ –≤–∞—Å —Å @{match_date["partner_username"]} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.')
                bot.send_photo(match_date['partner_id_chat'], match_date['user_photo'], caption = f'–£ –≤–∞—Å —Å @{match_date["username"]} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.')
            elif match_date['partner_username'] != "" and match_date["username"] == "":
                bot.send_photo(message.chat.id, match_date['partner_photo'], caption = f'–£ –≤–∞—Å –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤ c @{match_date["partner_username"]}, –æ–¥–Ω–∞–∫–æ —É –≤–∞—Å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω username –∏ –æ–Ω/–æ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –≤–∞–º–∏. –ü—Ä–æ—è–≤–∏—Ç–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É –∏ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π username.')
            elif match_date['partner_username'] == "" and match_date["username"] != "":
                bot.send_photo(match_date['partner_id_chat'], match_date['user_photo'], caption = f'–£ –≤–∞—Å –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤ c @{match_date["username"]}, –æ–¥–Ω–∞–∫–æ —É –≤–∞—Å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω username –∏ –æ–Ω/–æ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –≤–∞–º–∏. –ü—Ä–æ—è–≤–∏—Ç–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É –∏ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π username.')
            elif match_date['partner_username'] == "" and match_date["username"] == "":
                bot.send_message(message.chat.id, text= '–£ –≤–∞—Å –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤, –æ–¥–Ω–∞–∫–æ —É –≤–∞—Å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω username –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.')
                bot.send_message(match_date['partner_id_chat'], text='–£ –≤–∞—Å –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤, –æ–¥–Ω–∞–∫–æ —É –≤–∞—Å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω username –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.')
            search(message)
    elif message.text == "/menu":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        user_anket = types.KeyboardButton('–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞üìÉ',)
        find = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –∞–Ω–∫–µ—Ç—ãüëÄ',)
        pull_anket = types.KeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æüìù',)
        bye = types.KeyboardButton('–î–æ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏üëã')
        markup.row(user_anket, find, pull_anket, bye)
        bot.send_message(message.chat.id, text="–ú–µ–Ω—é: ", reply_markup=markup)
        bot.register_next_step_handler(message, main_menu)
    else:
        bot.send_message(message.chat.id, text='–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.')
        bot.register_next_step_handler(message, check_answer)

def main_menu(message):
    if message.text == '–î–æ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏üëã':
        bot.send_message(message.chat.id, text='–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å, –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –≤–Ω–æ–≤—å.', reply_markup=types.ReplyKeyboardRemove())
    elif message.text == '–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æüìù':
        bot.send_message(message.chat.id, text='–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è: ')
        bot.register_next_step_handler(message, get_name)
    elif message.text == '–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞üìÉ':
        personal_anket = functions.get_personal_data(message.chat.id)
        if personal_anket['sex']== True:
            sex = "–ú—É–∂—Å–∫–æ–π"
        else:
            sex = "–ñ–µ–Ω—Å–∫–∏–π"

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        user_anket = types.KeyboardButton('–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞üìÉ',)
        find = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –∞–Ω–∫–µ—Ç—ãüëÄ',)
        pull_anket = types.KeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æüìù',)
        bye = types.KeyboardButton('–î–æ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏üëã')
        markup.row(user_anket, find, pull_anket, bye)
        bot.send_photo(message.chat.id, personal_anket['file_unique_id'], caption=f'–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞: {personal_anket["name"]}, {sex}\n–ú–Ω–µ: {personal_anket["age"]}\n{personal_anket["description"]}', reply_markup=markup)
        bot.send_message(message.chat.id, text="–ú–µ–Ω—é: ")
        bot.register_next_step_handler(message, main_menu)
    elif message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –∞–Ω–∫–µ—Ç—ãüëÄ':
        search(message)

# bot.polling(none_stop=True, interval=0)


@server.route('/' + token, methods=['POST'])
def getMessage():
    json_string = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return "!", 200


@server.route("/")
def webhook():
    bot.remove_webhook()
    bot.set_webhook(url=web_hook + token)
    return "!", 200

# @server.route('/match', methods=['POST'])
# def match(message):
#     first = request.json.get('first')
#     second = request.json.get('second')
#     if first['username'] != "" and second['username'] != "":
#         bot.send_photo(message.chat.id, second['photo'], caption = f'–£ –≤–∞—Å —Å @{second["username"]} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.')
#         bot.send_photo(second['id_chat'], first['photo'], caption = f'–£ –≤–∞—Å —Å @{first["username"]} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.')
#     elif second['username'] != "" and first["username"] == "":
#         bot.send_photo(message.chat.id, second['photo'], caption = f'–£ –≤–∞—Å –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤ c @{second["username"]}, –æ–¥–Ω–∞–∫–æ —É –≤–∞—Å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω username –∏ –æ–Ω/–æ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –≤–∞–º–∏. –ü—Ä–æ—è–≤–∏—Ç–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É –∏ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π username.')
#     elif second['username'] == "" and first["username"] != "":
#         bot.send_photo(second['id_chat'], first['photo'], caption = f'–£ –≤–∞—Å –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤ c @{first["username"]}, –æ–¥–Ω–∞–∫–æ —É –≤–∞—Å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω username –∏ –æ–Ω/–æ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –≤–∞–º–∏. –ü—Ä–æ—è–≤–∏—Ç–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É –∏ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π username.')
#     elif first['username'] == "" and second["username"] == "":
#         bot.send_message(message.chat.id, text= '–£ –≤–∞—Å –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤, –æ–¥–Ω–∞–∫–æ —É –≤–∞—Å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω username –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.')
#         bot.send_message(second['id_chat'], text='–£ –≤–∞—Å –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤, –æ–¥–Ω–∞–∫–æ —É –≤–∞—Å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω username –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.')
#     print(first)
#     print(second)
#     # import pdb
#     # pdb.set_trace()
#     # bot.send_message(first, text="Test")
#     # bot.send_message(second, text="Test")
#     return jsonify({}), 200

if __name__ == "__main__":
    server.run(host="0.0.0.0", port=int(os.environ.get('PORT', 5000)))
